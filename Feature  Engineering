{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "04Hn38tM56ni"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        " # 1.  What is a parameter?\n",
        "\n",
        " 1. Parameters in python are variables — placeholders for the actual values the function needs. When the function is called, these values are passed in as arguments. For example, the arguments passed into the function .\n",
        "\n",
        "\n",
        "# 2. What is correlation?\n",
        "\n",
        "1. A correlation is the statistical summary of the relationship between two sets of variables. It is a core part of data exploratory analysis, and is a critical aspect of numerous advanced machine learning techniques.\n",
        "\n",
        "--------->   What does negative correlation mean?\n",
        "\n",
        "A negative correlation is a relationship between two variables that move in opposite directions. In other words, when variable A increases, variable B decreases. A negative correlation is also known as an inverse correlation. Two variables can have varying strengths of negative correlation\n",
        "\n",
        "# 3. Define Machine Learning. What are the main components in Machine Learning?\n",
        "\n",
        "-------->> Machine learning (ML) is a type of AI that enables computers to learn from data and perform tasks without explicit programming. The main components of ML are algorithms, data, models, and predictions.\n",
        "\n",
        "1. Key components of ML\n",
        "\n",
        "* Algorithms: The methods used to learn from data, such as decision trees and neural networks\n",
        "\n",
        "* Data: The information used to train the model, which can be labeled or unlabeled\n",
        "\n",
        "* Models: The representation of what the model looks like and how it's structured\n",
        "\n",
        "* Predictions: The output of the model, which can be used to make decisions or take actions\n",
        "\n",
        "2. Types of ML\n",
        "\n",
        "8 Supervised learning: The model is trained on labeled data, where the output is known\n",
        "\n",
        "* Semi-supervised learning: The model is trained on a combination of labeled and unlabeled data\n",
        "\n",
        "* Reinforcement learning: The model learns through trial and error, with rewards or penalties for correct or incorrect actions\n",
        "\n",
        "3. Applications of ML\n",
        "\n",
        "* ML is used in many fields, including image recognition, speech recognition, natural language processing, and recommendation systems.\n",
        "\n",
        "# 4. How does loss value help in determining whether the model is good or not?\n",
        "\n",
        "Loss is a numerical metric that describes how wrong a model's predictions are. Loss measures the distance between the model's predictions and the actual labels. The goal of training a model is to minimize the loss, reducing it to its lowest possible value\n",
        "\n",
        "# 5. What are continuous and categorical variables?\n",
        "\n",
        "Categorical variables, aka discrete variables. These come in only a fixed number of values – like dead/alive, obese/overweight/normal/underweight, Apgar score. Continuous variables. These can have any value between a theoretical minimum and maximum, like birth weight, BMI, temperature, neutrophil count.\n",
        "\n",
        "# 6. How do we handle categorical variables in Machine Learning? What are the common techniques?\n",
        "\n",
        "7 Encoding Techniques for Categorical Data\n",
        "One-Hot Encoding. One-hot encoding, also known as dummy encoding, is a popular technique for converting categorical data into a numerical format. ...\n",
        "Dummy Encoding. ...\n",
        "Effect Encoding. ...\n",
        "Label Encoding. ...\n",
        "Ordinal Encoding. ...\n",
        "Count Encoding. ...\n",
        "Binary Encoding.\n",
        "\n",
        "# 7. What do you mean by training and testing a dataset?\n",
        "\n",
        "In machine learning, \"training and testing a dataset\" means dividing a dataset into two parts: a \"training set\" which is used to teach a model to recognize patterns and make predictions, and a separate \"testing set\" used to evaluate how well the trained model performs on new, unseen data, essentially checking its accuracy and generalization ability on data it hasn't encountered before; the model learns from the training data and is then tested on the independent testing data to assess its performance.\n",
        "\n",
        "\n",
        "# 8. What is sklearn.preprocessing?\n",
        "\n",
        "The sklearn. preprocessing package provides several common utility functions and transformer classes to change raw feature vectors into a representation that is more suitable for the downstream estimators\n",
        "\n",
        "# 9. What is a Test set?\n",
        "\n",
        "A \"Test set\" is a portion of data that is completely separated from the training data used to evaluate the performance of a machine learning model, providing an unbiased assessment of how well the model generalizes to unseen data; essentially, it's a set of data used to test the accuracy of a trained model on new, unknown examples.\n",
        "\n",
        "# 10. How do we split data for model fitting (training and testing) in Python? How do you approach a Machine Learning problem?\n",
        "\n",
        "To split data for model fitting (training and testing) in Python, you primarily use the train_test_split function from the scikit-learn library, which allows you to divide your dataset into separate training and testing sets; typically, you'd split your data into features (X) and labels (y) before using this function, then assign the resulting split sets as X_train, X_test, y_train, and y_test for training and testing your model.\n",
        "\n",
        "# 11. Why do we have to perform EDA before fitting a model to the data?\n",
        "\n",
        "Before fitting any model, it is often important to conduct an exploratory data analysis (EDA) in order to check assumptions, inspect the data for anomalies (such as missing, duplicated, or mis-coded data), and inform feature selection/transformation.\n",
        "\n",
        "# 12. What is correlation?\n",
        "\n",
        "A correlation is the statistical summary of the relationship between two sets of variables. It is a core part of data exploratory analysis, and is a critical aspect of numerous advanced machine learning techniques.\n",
        "\n",
        "# 13. What does negative correlation mean?\n",
        "\n",
        "A negative correlation is a relationship between two variables that move in opposite directions. In other words, when variable A increases, variable B decreases. A negative correlation is also known as an inverse correlation. Two variables can have varying strengths of negative correlation.\n",
        "\n",
        "# 14 . How can you find correlation between variables in Python?\n",
        "\n",
        "In Python, you can determine the correlation between variables using various libraries, with the most common one being the pandas library for data manipulation and the numpy library for mathematical operations. Additionally, you can use the matplotlib and seaborn libraries for data visualization.\n",
        "\n",
        "# 15. What is causation? Explain difference between correlation and causation with an example.\n",
        "\n",
        "Theoretically, the difference between the two types of relationships are easy to identify — an action or occurrence can cause another (e.g. smoking causes an increase in the risk of developing lung cancer), or it can correlate with another (e.g. smoking is correlated with alcoholism, but it does not cause alcoholism).\n",
        "\n",
        "# 16. What is an Optimizer? What are different types of optimizers? Explain each with an example.\n",
        "\n",
        "Optimizers like Adam and SGD are commonly used for general-purpose tasks, while others like Adagrad and Adadelta are more specialized for sparse data or particular scenarios. Selecting the right optimizer helps in speeding up convergence, improving model accuracy, and enhancing overall performance.\n",
        "\n",
        "#17. What is sklearn.linear_model ?\n",
        "\n",
        "linear_model is a class of the sklearn module if contain different functions for performing machine learning with linear models. The term linear model implies that the model is specified as a linear combination of features\n",
        "\n",
        "# 18 . What does model.fit() do? What arguments must be given?\n",
        "\n",
        "\n",
        "Training: The fit() method adjusts the model parameters based on the input data ( X ) and the target values ( y ). Optimization: The model tries to minimize the error between its predictions and the actual target values.\n",
        "\n",
        "#19. What does model.predict() do? What arguments must be given?\n",
        "\n",
        "\n",
        "Model. predict passes the input vector through the model and returns the output tensor for each datapoint. Since the last layer in your model is a single Dense neuron, the output for any datapoint is a single value. And since you didn't specify an activation for the last layer, it will default to linear activation\n",
        "\n",
        "#20 . What are continuous and categorical variables?\n",
        "\n",
        "Categorical variables, aka discrete variables. These come in only a fixed number of values – like dead/alive, obese/overweight/normal/underweight, Apgar score. Continuous variables. These can have any value between a theoretical minimum and maximum, like birth weight, BMI, temperature, neutrophil count.\n",
        "\n",
        "#21 . What is feature scaling? How does it help in Machine Learning?\n",
        "\n",
        "\n",
        "\n",
        "Scaling the features makes it easier for algorithms to find the optimal solution, as the different scales of the features do not influence them. It can lead to faster convergence and more accurate predictions, especially when using algorithms like k-nearest neighbors, support vector machines, and neural networks.\n",
        "\n",
        "#22 . How do we perform scaling in Python?\n",
        "\n",
        "How and Where to Apply Feature Scaling in Python?\n",
        "Standardization. Standardization is a technique where the values are positioned around the mathematical average with a unit standard deviation. ...\n",
        "Normalization. Normalization is a scaling technique where you shift the values and rescale them so they end up between 0 and 1.\n",
        "\n",
        "# 23. What is sklearn.preprocessing?\n",
        "\n",
        "The sklearn. preprocessing package provides several common utility functions and transformer classes to change raw feature vectors into a representation that is more suitable for the downstream estimators.\n",
        "\n",
        "#24 . How do we split data for model fitting (training and testing) in Python?\n",
        "\n",
        "To split data for model fitting (training and testing) in Python, you primarily use the train_test_split function from the scikit-learn library, which allows you to randomly divide your dataset into separate training and testing sets, typically with a specified test size (e.g., 20% for testing, 80% for training).\n",
        "\n",
        "#25 . Explain data encoding?\n",
        "\n",
        "Encoding is the process of converting the data or a given sequence of characters, symbols, alphabets etc., into a specified format, for the secured transmission of data. Decoding is the reverse process of encoding which is to extract the information from the converted format. Encoding Techniques.\n"
      ],
      "metadata": {
        "id": "ibCYtRdOFssq"
      }
    }
  ]
}